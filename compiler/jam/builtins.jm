
#TODO: Allow for arbitrary sizes
class Int
  value:_builtins.Int64

  def new(v:_builtins.Int64)
    value = v
  end

  def self + other:Int
    return Int(_builtins.intAdd(value, other.value))
  end

  def self - other:Int
    return Int(_builtins.intSub(value, other.value))
  end
end

#TODO: Implement using byte arrays
class String
  value:_builtins.String

  def new(v:_builtins.String)
    value = v
  end
end

#TODO: Implement properly once casting is in place
def puts(value:Int)
  _builtins.puts(value.value)
end

def puts(value:String)
  _builtins.puts(value.value)
end
